// <auto-generated />
using System;
using LixiBanff.Persistence.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace LixiBanff.Migrations
{
    [DbContext(typeof(AplicationDbContext))]
    [Migration("20221020045337_UsuarioChange")]
    partial class UsuarioChange
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.28")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("LixiBanff.Domain.Models.Cliente", b =>
                {
                    b.Property<int>("ClienteId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<string>("CorreoCliente")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DescripcionCliente")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DireccionCliente")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NombreCliente")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TelefonoCliente")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ClienteId");

                    b.ToTable("Cliente");
                });

            modelBuilder.Entity("LixiBanff.Domain.Models.Nodo", b =>
                {
                    b.Property<int>("NodoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<int>("ClienteId")
                        .HasColumnType("int");

                    b.Property<string>("CodigoNodo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Mac")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NombreNodo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PanoId")
                        .HasColumnType("int");

                    b.Property<int>("PosicionNodo")
                        .HasColumnType("int");

                    b.Property<int>("TipoNodoId")
                        .HasColumnType("int");

                    b.HasKey("NodoId");

                    b.HasIndex("ClienteId");

                    b.HasIndex("PanoId");

                    b.HasIndex("TipoNodoId");

                    b.ToTable("Nodo");
                });

            modelBuilder.Entity("LixiBanff.Domain.Models.Pano", b =>
                {
                    b.Property<int>("PanoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<double>("AnchoPano")
                        .HasColumnType("float");

                    b.Property<int>("ClienteId")
                        .HasColumnType("int");

                    b.Property<string>("CodigoPano")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DescripcionPano")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("LargoPano")
                        .HasColumnType("float");

                    b.Property<string>("NombrePano")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PilaId")
                        .HasColumnType("int");

                    b.Property<int>("PosicionPano")
                        .HasColumnType("int");

                    b.HasKey("PanoId");

                    b.HasIndex("ClienteId");

                    b.HasIndex("PilaId");

                    b.ToTable("Pano");
                });

            modelBuilder.Entity("LixiBanff.Domain.Models.Perfil", b =>
                {
                    b.Property<int>("PerfilId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("NombrePerfil")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("OrdenPerfil")
                        .HasColumnType("int");

                    b.HasKey("PerfilId");

                    b.ToTable("Perfil");
                });

            modelBuilder.Entity("LixiBanff.Domain.Models.Pila", b =>
                {
                    b.Property<int>("PilaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<double>("AnchoPila")
                        .HasColumnType("float");

                    b.Property<int>("CantidadPanos")
                        .HasColumnType("int");

                    b.Property<int>("ClienteId")
                        .HasColumnType("int");

                    b.Property<string>("CodigoPila")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DescripcionPila")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("LargoPila")
                        .HasColumnType("float");

                    b.Property<string>("LatLongPila")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NombrePila")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PosicionPila")
                        .HasColumnType("int");

                    b.Property<string>("UbicacionPila")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PilaId");

                    b.HasIndex("ClienteId");

                    b.ToTable("Pila");
                });

            modelBuilder.Entity("LixiBanff.Domain.Models.TipoNodo", b =>
                {
                    b.Property<int>("TipoNodoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("NombreTipoNodo")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TipoNodoId");

                    b.ToTable("TipoNodo");
                });

            modelBuilder.Entity("LixiBanff.Domain.Models.Usuario", b =>
                {
                    b.Property<int>("UsuarioId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<int>("ClienteId")
                        .HasColumnType("int");

                    b.Property<string>("CorreoUsuario")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DescripcionUsuario")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NombreUsuario")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PasswordNotEncripted")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PerfilId")
                        .HasColumnType("int");

                    b.Property<string>("TelefonoUsuario")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("isSuperAdmin")
                        .HasColumnType("bit");

                    b.HasKey("UsuarioId");

                    b.HasIndex("ClienteId");

                    b.HasIndex("PerfilId");

                    b.ToTable("Usuario");
                });

            modelBuilder.Entity("LixiBanff.Domain.Models.Nodo", b =>
                {
                    b.HasOne("LixiBanff.Domain.Models.Cliente", "Cliente")
                        .WithMany()
                        .HasForeignKey("ClienteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LixiBanff.Domain.Models.Pano", "Pano")
                        .WithMany("Nodo")
                        .HasForeignKey("PanoId");

                    b.HasOne("LixiBanff.Domain.Models.TipoNodo", "TipoNodo")
                        .WithMany()
                        .HasForeignKey("TipoNodoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("LixiBanff.Domain.Models.Pano", b =>
                {
                    b.HasOne("LixiBanff.Domain.Models.Cliente", "Cliente")
                        .WithMany()
                        .HasForeignKey("ClienteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LixiBanff.Domain.Models.Pila", "Pila")
                        .WithMany("Pano")
                        .HasForeignKey("PilaId");
                });

            modelBuilder.Entity("LixiBanff.Domain.Models.Pila", b =>
                {
                    b.HasOne("LixiBanff.Domain.Models.Cliente", "Cliente")
                        .WithMany()
                        .HasForeignKey("ClienteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("LixiBanff.Domain.Models.Usuario", b =>
                {
                    b.HasOne("LixiBanff.Domain.Models.Cliente", "Cliente")
                        .WithMany()
                        .HasForeignKey("ClienteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LixiBanff.Domain.Models.Perfil", "Perfil")
                        .WithMany()
                        .HasForeignKey("PerfilId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
